# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $radius 15

# Set up gaps
gaps inner 10
gaps outer 5

# Set no title bar on windows
new_window pixel 2
for_window [class="^.*"] border pixel 2

# border_radius $radius

# Set colors from Xresouces
# Change 'color7' and 'color0' to whatever colors you want i3 to use from the generated scheme
# NOTE: The hex codes listed after the resource reference are the colors that i3 will use if it fails to get colors from Xresouces
set_from_resource $fg color7 #ffffff
set_from_resource $bg color0 #000000

# Set color of window highlight for focused windows
# class				border	backgr.	text	indicator	child_border	
#client.focused		#4c7899	#285577	#ffffff	#2e9ef4		#285577
#client.focused		#60d0f0	#222222	#ffffff	#60d0f0		#60d0f0
client.focused		$fg		#222222	#ffffff	$fg			$fg

# Set some windows to be always floating
for_window [class="MEGAsync"] floating enable
for_window [class="Conky"] floating enable

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 11
font pango:Font Awesome 5 Free 10
font pango:Font Awesome 5 Brands 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Generate pywal colorscheme
exec --no-startup-id wal -R
#exec --no-startup-id pacwall -W

# Run the autorandr -c command when i3 loads so the proper display configuration is used
exec --no-startup-id autorandr -c

# Start blueman applet
exec --no-startup-id blueman-applet

# Start copyq
exec --no-startup-id copyq

# Start flameshot
exec --no-startup-id flameshot
bindsym $mod+c exec --no-startup-id flameshot gui

# Set wallpaper using feh
#exec --no-startup-id ~/.fehbg

# Start picom for transparency
exec --no-startup-id picom -b -i 1 -m 1

# Start dunst for notifications
exec --no-startup-id dunst

# Start megasync
exec_always --no-startup-id megasync

# Start screenrotator
exec --no-startup-id screenrotator

# Start touchegg for gestures
exec --no-startup-id touchegg

# Start protonvpn tray
exec --no-startup-id protonvpn
exec --no-startup-id protonvpn-tray

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- ~/.config/i3lock/i3lock.sh --nofork

# Start xautolock for lockout timer
exec "xidlehook --not-when-fullscreen --not-when-audio --timer 1800 '~/.config/i3lock/i3lock.sh' ''"

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Start polybar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Use pactl to adjust volume in PulseAudio.
#set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id ~/.config/dunst/scripts/volumeControl.sh up
bindsym XF86AudioLowerVolume exec --no-startup-id ~/.config/dunst/scripts/volumeControl.sh down
bindsym XF86AudioMute exec --no-startup-id ~/.config/dunst/scripts/volumeControl.sh toggle_mute
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use brightnessctl to adjust screen brightness
bindsym XF86MonBrightnessUp exec --no-startup-id ~/.config/dunst/scripts/brightnessControl.sh up
bindsym XF86MonBrightnessDown exec --no-startup-id ~/.config/dunst/scripts/brightnessControl.sh down

# toggle rotation of pen input
# exec --no-startup-id ~/scripts/pen_rotation/toggle_pen_rotation.sh
bindsym $mod+Shift+p exec --no-startup-id ~/scripts/pen_rotation/toggle_pen_rotation.sh

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run -i -fn "Hack-10" -nb "#2E3440" -nf "#88C0D0" -sb "#88C0D0" -sf "#2E3440"
bindsym $mod+d exec dmenu_run -i -fn "Hack-10" -nb "$bg" -nf "$fg" -sb "$fg" -sf "$bg"

# Run bashtop in a new terminator window
bindsym $mod+b exec terminator -e bashtop

# Run menu-calc
bindsym $mod+equal exec =

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# toggle the split on every new window
bindsym $mod+m split toggle
# for_window [class="^.*"] split toggle
exec_always ~/scripts/i3_alternating_layouts/alternating_layouts.py

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 1:
set $ws2 2:
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 8:
set $ws9 9:
set $ws10 10:

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# bindsym $mod+Shift+e exec "i3-msg exit"

# Locks with i3lock-color
bindsym $mod+l exec ~/.config/i3lock/i3lock.sh

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad winodw
bindsym $mod+minus scratchpad show

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Move workspace to next monitor
bindsym $mod+p move workspace to output right

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#        status_command i3blocks
#}

